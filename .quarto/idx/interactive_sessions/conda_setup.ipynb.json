{"title":"conda installation and usage","markdown":{"yaml":{"title":"conda installation and usage"},"headingText":"`coda` installation and usage","containsRefs":false,"markdown":"\n\n\n\n\n## Installing `conda`\n\n### Installing Miniconda on Windows:\n\n1. **Download Miniconda Installer**:\n    - Go to the [Miniconda download page](https://docs.conda.io/en/latest/miniconda.html).\n    - Download the Miniconda installer for Windows. Make sure to choose the appropriate version (Python 3.x) based on your preference.\n\n2. **Run the Installer**:\n    - Locate the downloaded installer and double-click on it to start the installation process.\n    - Follow the on-screen instructions. Here are some recommendations for the installation:\n        - Choose \"Just Me\" unless you're sure about the \"All Users\" option.\n        - Use the default installation location unless you have a specific need to change it.\n        - It's recommended to check the box \"Add Miniconda to my PATH environment variable\" for easier command-line use. However, be aware that this can interfere with other Python installations.\n\n3. **Verify Installation**:\n    - Open the Command Prompt (you can search for `cmd` in the Windows search bar).\n    - Type `conda --version` and press Enter. This should display the version of `conda` installed, confirming that the installation was successful.\n\n### Installing Miniconda on MacOS:\n\n1. **Download Miniconda Installer**:\n    - Go to the [Miniconda download page](https://docs.conda.io/en/latest/miniconda.html).\n    - Download the Miniconda installer for MacOS. Make sure to choose the appropriate version (Python 3.x) based on your preference.\n\n2. **Run the Installer**:\n    - Open a terminal.\n    - Navigate to the directory where the installer was downloaded.\n    - Make the installer executable with the command:\n      ```bash\n      chmod +x Miniconda3-latest-MacOSX-x86_64.sh\n      ```\n    - Start the installation process with:\n      ```bash\n      ./Miniconda3-latest-MacOSX-x86_64.sh\n      ```\n    - Follow the on-screen instructions to complete the installation.\n\n3. **Verify Installation**:\n    - In the terminal, type:\n      ```bash\n      conda --version\n      ```\n    - This should display the version of `conda` installed, confirming that the installation was successful.\n\n\n### Installing Miniconda on Linux:\n\n1. **Download Miniconda Installer**:\n    - Go to the [Miniconda download page](https://docs.conda.io/en/latest/miniconda.html).\n    - Download the Miniconda installer for Linux. Make sure to choose the appropriate version (Python 3.x) based on your preference.\n\n2. **Run the Installer**:\n    - Open a terminal.\n    - Navigate to the directory where the installer was downloaded.\n    - Make the installer executable with the command:\n      ```bash\n      chmod +x Miniconda3-latest-Linux-x86_64.sh\n      ```\n    - Start the installation process with:\n      ```bash\n      ./Miniconda3-latest-Linux-x86_64.sh\n      ```\n    - Follow the on-screen instructions to complete the installation.\n\n3. **Verify Installation**:\n    - In the terminal, type:\n      ```bash\n      conda --version\n      ```\n    - This should display the version of `conda` installed, confirming that the installation was successful.\n\n\n\n\n# Initializing Conda\n\nNow that `conda` is installed, we just need to initialize it in our shell so it will work well with other programs (like the IDE we will soon install). The first step for intializing `conda` is to determine which shell (command line) your system uses. The process is different for each operating system:\n\n### Identifying your shell on Windows\n\nOn Windows, if you're using the Command Prompt, your shell is `cmd`. If you're using the newer Windows Terminal or PowerShell (you probably will be), it's `powershell`.\n\nHowever, if you've set up something like Git Bash, Cygwin, or the Windows Subsystem for Linux (WSL), then you might be using `bash` or another shell.\n\nTo check in **PowerShell**, you can use:\n\n```bash\n$PSVersionTable.PSVersion\n```\n\n### Identifying your shell on a Mac\n\nBy default, newer Macs (since Catalina) use `zsh` as the default shell, while older versions use `bash`.\n\nTo determine which shell you're using:\n\n1. Open the Terminal.\n2. Enter:\n\n```bash\necho $SHELL\n```\n\nThis command will display the path to the shell. The output might be something like `/bin/zsh` or `/bin/bash`.\n\n### Identifying your shell on Linux\n\nMost Linux distributions come with `bash` as the default shell, but this can vary.\n\nTo determine the shell in use:\n\n1. Open your terminal.\n2. Enter:\n\n```bash\necho $SHELL\n```\n\nAgain, the output will show the path to the shell, like `/bin/bash` or `/bin/zsh`.\n\n\n\n## Initializing Conda for Your Shell:\n\nOnce you've identified your shell, you can initialize conda for it:\n\n```bash\nconda init <shell_name>\n```\n\nReplace `<shell_name>` with the name of the shell (`bash`, `zsh`, `cmd`, `powershell`, etc.)\n\n**Note:** If for any reason `conda` is not recognized as a command, it's possible the conda binary path isn't in your system's PATH variable. You'll need to add it manually, and the process will depend on which OS and shell you're using.\n\n### Updating `conda`\n\nYou won't need to do this very often, but it's a good idea to update `conda` periodically to ensure you have the latest version.\n\n1. Windows:\n    1. Open the a PowerShell from the Start Menu.\n    2. Run the following command to update `conda`:\n\n        ```bash\n        conda update conda\n        ```\n\n2. MacOS/Linux:\n    1. Open the Terminal.\n    2. Run the following command to update `conda`:\n    \n        ```bash\n        conda update conda\n        ``` \n\n\n# Working with `conda` environments\n\n## Creating a new `conda` environment\n\nConda can create new environments using a markup language specification called `yaml`. We will use an environment file created for our course to create an `eds217_2023` environment on your local machine.\n\nYou can create a new environment using the following command:\n\n```bash\n    conda create -n my_cool_environment\n```\nThis will create a new environment named `my_cool_environment`\n\nOften you will want to specify the python that you'd like the environment to use. You do that by adding a `python=<version>`. Here is a command that would create an environment that had the python 3.10 interpreter installed:\n\n```bash\n    conda create -n my_py310_environment python=3.10\n```\nFinally, you probably noticed that `conda` prompts you for permission before installing new packages. Sometimes you need to pay attention to these prompts, especially when you are adding packages to very complex environments. But on creation, you may want to speed things up. The `--yes` flag allows you to bypass approval and go straight to installation:\n\n```bash\n    conda create --yes -n my_py310_environment python=3.10\n```\n\n## Activating an environment\n\nYou can activate an environment using the following command:\n\n```bash\n    conda activate my_cool_environment\n```\n\n## Deactivating an environment\n\nYou can deactivate an environment using the following command:\n\n```bash\n    conda deactivate\n``` \nThere is no need to deactivate an environment before activating a different environment.\n\n## Removing an environment (generally, you won't want to do this!)\n\nYou can remove an environment using the following command:\n\n```bash\n    conda env remove -n my_cool_environment\n```\n\n## Listing all available environments\n\nEventually you are going to have a lot of different environments, and you may not remember all of them, or the exact name of the one you are looking to activate. In this case, `conda env list` (or `conda info --envs`) is your friend. \n\n```bash\n    conda env list\n```\n\nThis will display a list of all the conda environments you have created. The currently active environment (if any) will be marked with an asterisk (*) next to its name.\n\n# Installing the EDS217_2023 Python Environment.\n\n## Prerequisites:\n\n1. Ensure you have already installed `conda` (see above).\n\n## Instructions:\n\n### 1. Fork the `eds217_2023` Repository:\n\nGo to the [eds217_2023](https://github.com/environmental-data-science/eds217_2023) repository and click the \"Fork\" button in the upper right corner of the page. This will create a copy of the repository in your GitHub account.\n\n### 1. Clone Your Forked Repository:\n\nOpen a terminal (Command Prompt on Windows, Terminal on MacOS/Linux) and navigate to the directory where you want to clone the repository.\n\n```bash\ngit clone https://github.com/YOUR_USERNAME/eds217_2023.git\ncd eds217_2023\n```\n\nReplace `YOUR_USERNAME` with your GitHub username.\n\n### 2. Create the Conda Environment:\n\n#### Windows:\n\n```bash\nconda env create -f environment.yml\nconda activate eds217_2023\n```\n\n#### MacOS/Linux:\n\n```bash\nconda env create -f environment.yml\nsource activate eds217_2023\n```\n\n### 3. Set Up the `eds217_2023` Environment as an ipykernel:\n\nIn order to make sure our python environment is used when running code within an interactive editor such as a Jupyter notebook or in an IDE, you need ensure that the correct kernel is used to run our code. A python kernel is a program that runs and introspects the user's code. Interactive tools such as Jupyter and IDEs use the kernel to execute code when you run a cell in the editor. `ipykernel`` is a tool that allows you to use specific python kernels when running code interactively within Jupyter notebooks and IDEs.\n\nAfter activating the `eds217_2023` environment, run the following command:\n\n```bash\npython -m ipykernel install --user --name eds217_2023 --display-name \"Python (eds217_2023)\"\n```\n\nThis will allow you to select the `eds217_2023` environment as a kernel in Jupyter or in your IDE, which we will install next.\n\n","srcMarkdownNoYaml":"\n\n\n\n# `coda` installation and usage\n\n## Installing `conda`\n\n### Installing Miniconda on Windows:\n\n1. **Download Miniconda Installer**:\n    - Go to the [Miniconda download page](https://docs.conda.io/en/latest/miniconda.html).\n    - Download the Miniconda installer for Windows. Make sure to choose the appropriate version (Python 3.x) based on your preference.\n\n2. **Run the Installer**:\n    - Locate the downloaded installer and double-click on it to start the installation process.\n    - Follow the on-screen instructions. Here are some recommendations for the installation:\n        - Choose \"Just Me\" unless you're sure about the \"All Users\" option.\n        - Use the default installation location unless you have a specific need to change it.\n        - It's recommended to check the box \"Add Miniconda to my PATH environment variable\" for easier command-line use. However, be aware that this can interfere with other Python installations.\n\n3. **Verify Installation**:\n    - Open the Command Prompt (you can search for `cmd` in the Windows search bar).\n    - Type `conda --version` and press Enter. This should display the version of `conda` installed, confirming that the installation was successful.\n\n### Installing Miniconda on MacOS:\n\n1. **Download Miniconda Installer**:\n    - Go to the [Miniconda download page](https://docs.conda.io/en/latest/miniconda.html).\n    - Download the Miniconda installer for MacOS. Make sure to choose the appropriate version (Python 3.x) based on your preference.\n\n2. **Run the Installer**:\n    - Open a terminal.\n    - Navigate to the directory where the installer was downloaded.\n    - Make the installer executable with the command:\n      ```bash\n      chmod +x Miniconda3-latest-MacOSX-x86_64.sh\n      ```\n    - Start the installation process with:\n      ```bash\n      ./Miniconda3-latest-MacOSX-x86_64.sh\n      ```\n    - Follow the on-screen instructions to complete the installation.\n\n3. **Verify Installation**:\n    - In the terminal, type:\n      ```bash\n      conda --version\n      ```\n    - This should display the version of `conda` installed, confirming that the installation was successful.\n\n\n### Installing Miniconda on Linux:\n\n1. **Download Miniconda Installer**:\n    - Go to the [Miniconda download page](https://docs.conda.io/en/latest/miniconda.html).\n    - Download the Miniconda installer for Linux. Make sure to choose the appropriate version (Python 3.x) based on your preference.\n\n2. **Run the Installer**:\n    - Open a terminal.\n    - Navigate to the directory where the installer was downloaded.\n    - Make the installer executable with the command:\n      ```bash\n      chmod +x Miniconda3-latest-Linux-x86_64.sh\n      ```\n    - Start the installation process with:\n      ```bash\n      ./Miniconda3-latest-Linux-x86_64.sh\n      ```\n    - Follow the on-screen instructions to complete the installation.\n\n3. **Verify Installation**:\n    - In the terminal, type:\n      ```bash\n      conda --version\n      ```\n    - This should display the version of `conda` installed, confirming that the installation was successful.\n\n\n\n\n# Initializing Conda\n\nNow that `conda` is installed, we just need to initialize it in our shell so it will work well with other programs (like the IDE we will soon install). The first step for intializing `conda` is to determine which shell (command line) your system uses. The process is different for each operating system:\n\n### Identifying your shell on Windows\n\nOn Windows, if you're using the Command Prompt, your shell is `cmd`. If you're using the newer Windows Terminal or PowerShell (you probably will be), it's `powershell`.\n\nHowever, if you've set up something like Git Bash, Cygwin, or the Windows Subsystem for Linux (WSL), then you might be using `bash` or another shell.\n\nTo check in **PowerShell**, you can use:\n\n```bash\n$PSVersionTable.PSVersion\n```\n\n### Identifying your shell on a Mac\n\nBy default, newer Macs (since Catalina) use `zsh` as the default shell, while older versions use `bash`.\n\nTo determine which shell you're using:\n\n1. Open the Terminal.\n2. Enter:\n\n```bash\necho $SHELL\n```\n\nThis command will display the path to the shell. The output might be something like `/bin/zsh` or `/bin/bash`.\n\n### Identifying your shell on Linux\n\nMost Linux distributions come with `bash` as the default shell, but this can vary.\n\nTo determine the shell in use:\n\n1. Open your terminal.\n2. Enter:\n\n```bash\necho $SHELL\n```\n\nAgain, the output will show the path to the shell, like `/bin/bash` or `/bin/zsh`.\n\n\n\n## Initializing Conda for Your Shell:\n\nOnce you've identified your shell, you can initialize conda for it:\n\n```bash\nconda init <shell_name>\n```\n\nReplace `<shell_name>` with the name of the shell (`bash`, `zsh`, `cmd`, `powershell`, etc.)\n\n**Note:** If for any reason `conda` is not recognized as a command, it's possible the conda binary path isn't in your system's PATH variable. You'll need to add it manually, and the process will depend on which OS and shell you're using.\n\n### Updating `conda`\n\nYou won't need to do this very often, but it's a good idea to update `conda` periodically to ensure you have the latest version.\n\n1. Windows:\n    1. Open the a PowerShell from the Start Menu.\n    2. Run the following command to update `conda`:\n\n        ```bash\n        conda update conda\n        ```\n\n2. MacOS/Linux:\n    1. Open the Terminal.\n    2. Run the following command to update `conda`:\n    \n        ```bash\n        conda update conda\n        ``` \n\n\n# Working with `conda` environments\n\n## Creating a new `conda` environment\n\nConda can create new environments using a markup language specification called `yaml`. We will use an environment file created for our course to create an `eds217_2023` environment on your local machine.\n\nYou can create a new environment using the following command:\n\n```bash\n    conda create -n my_cool_environment\n```\nThis will create a new environment named `my_cool_environment`\n\nOften you will want to specify the python that you'd like the environment to use. You do that by adding a `python=<version>`. Here is a command that would create an environment that had the python 3.10 interpreter installed:\n\n```bash\n    conda create -n my_py310_environment python=3.10\n```\nFinally, you probably noticed that `conda` prompts you for permission before installing new packages. Sometimes you need to pay attention to these prompts, especially when you are adding packages to very complex environments. But on creation, you may want to speed things up. The `--yes` flag allows you to bypass approval and go straight to installation:\n\n```bash\n    conda create --yes -n my_py310_environment python=3.10\n```\n\n## Activating an environment\n\nYou can activate an environment using the following command:\n\n```bash\n    conda activate my_cool_environment\n```\n\n## Deactivating an environment\n\nYou can deactivate an environment using the following command:\n\n```bash\n    conda deactivate\n``` \nThere is no need to deactivate an environment before activating a different environment.\n\n## Removing an environment (generally, you won't want to do this!)\n\nYou can remove an environment using the following command:\n\n```bash\n    conda env remove -n my_cool_environment\n```\n\n## Listing all available environments\n\nEventually you are going to have a lot of different environments, and you may not remember all of them, or the exact name of the one you are looking to activate. In this case, `conda env list` (or `conda info --envs`) is your friend. \n\n```bash\n    conda env list\n```\n\nThis will display a list of all the conda environments you have created. The currently active environment (if any) will be marked with an asterisk (*) next to its name.\n\n# Installing the EDS217_2023 Python Environment.\n\n## Prerequisites:\n\n1. Ensure you have already installed `conda` (see above).\n\n## Instructions:\n\n### 1. Fork the `eds217_2023` Repository:\n\nGo to the [eds217_2023](https://github.com/environmental-data-science/eds217_2023) repository and click the \"Fork\" button in the upper right corner of the page. This will create a copy of the repository in your GitHub account.\n\n### 1. Clone Your Forked Repository:\n\nOpen a terminal (Command Prompt on Windows, Terminal on MacOS/Linux) and navigate to the directory where you want to clone the repository.\n\n```bash\ngit clone https://github.com/YOUR_USERNAME/eds217_2023.git\ncd eds217_2023\n```\n\nReplace `YOUR_USERNAME` with your GitHub username.\n\n### 2. Create the Conda Environment:\n\n#### Windows:\n\n```bash\nconda env create -f environment.yml\nconda activate eds217_2023\n```\n\n#### MacOS/Linux:\n\n```bash\nconda env create -f environment.yml\nsource activate eds217_2023\n```\n\n### 3. Set Up the `eds217_2023` Environment as an ipykernel:\n\nIn order to make sure our python environment is used when running code within an interactive editor such as a Jupyter notebook or in an IDE, you need ensure that the correct kernel is used to run our code. A python kernel is a program that runs and introspects the user's code. Interactive tools such as Jupyter and IDEs use the kernel to execute code when you run a cell in the editor. `ipykernel`` is a tool that allows you to use specific python kernels when running code interactively within Jupyter notebooks and IDEs.\n\nAfter activating the `eds217_2023` environment, run the following command:\n\n```bash\npython -m ipykernel install --user --name eds217_2023 --display-name \"Python (eds217_2023)\"\n```\n\nThis will allow you to select the `eds217_2023` environment as a kernel in Jupyter or in your IDE, which we will install next.\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","html-math-method":"katex","toc":true,"css":["styles/activities.css"],"include-before-body":["../header.html"],"output-file":"conda_setup.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.361","toc-location":"left","title":"conda installation and usage"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}