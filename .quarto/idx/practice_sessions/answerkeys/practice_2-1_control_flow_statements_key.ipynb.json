{"title":"Exercise 2-1: Control Flow Statements","markdown":{"yaml":{"title":"Exercise 2-1: Control Flow Statements"},"headingText":"ðŸ“š  <b> Practice 1. </b>","containsRefs":false,"markdown":"\n\n\n\n\n\n\n\n\nIn programs, <code>if</code> statements are useful for catching errors due to user input. Define two new variables based on user input: the first prompting for a temperature value and the second prompting for the units as \"F\" or \"C\". Using the equation below, write an <code>if</code> statement that converts the temperature input to Â°C if it was given in Â°F or to Â°F if given in Â°C. Recall that all variables assigned based on user input are strings. Be sure to comment your code.\n\nFormula for conversion between Â°F and Â°C:\n$$ T_{^{\\circ} C} = (T_{^{\\circ} F} - 32) \\times 5/9 $$\n\n</div>\n\n\n## ðŸ“š  <b> Practice 2. </b> \nUsing nested <code>if</code> statements and your code from Practice question #1, convert the user input temperature to the opposite units (Â°F to Â°C or vice versa), print a statement to the user that reports the temperature in the converted units and indicates whether or not the temperature below freezing. \n\nYour print statement should look something like, \n\n<code>The temperature is __Â°C/F. It is (not) below freezing.</code>\n\n\n## ðŸ“š  <b> Practice 3. </b> \n\n1. Create a list of the six organic elements sorted in alphabetical order and then print each element in the list.\n\n2. Given your sorted <code>org_elements</code> list and the corresponding list of atomic masses given in the cell below, use <code>enumerate()</code> in a <code>for</code> loop to print a formatted statement that expresses the atomic mass of of each element. \n\nYour formatted print statement should include the name of the element, the atomic mass rounded to 2 decimal places, and units.\n\nAnother solution using `zip()` is given in the cell below.\n\n## ðŸ“š  <b> Practice 4. </b> \nThe cell below contains monthly global land-ocean surface temperature in Â°F for each month during the years 2015-2022. \n\nUsing  <code>enumerate()</code>, <code>zip()</code>, a nested <code>for</code> loop, or some combination of the three:\n\n<ol class=\"alpha\">\n<li> Calculate the monthly global land-ocean surface temperature anomalies (deviation from the mean) in Â°C for 2015-2018. The mean global land-ocean surface temperature calculated over the 20th century was 15.6Â°C.</li>\n<li> Create a new list with the mean monthly global surface temperature anomalies in Â°C for 2015-2023 (i.e. calculate the mean temperature anomaly for each month and put these values in a list). Use the command <code>np.mean()</code> to calculate mean values. </li> \n<li> Print each monthly mean value with the name of the month and units. </li>\n</ol>\n</div>\n\n<hr style=\"border-top: 1px solid gray; margin-top: 24px; margin-bottom: 1px\"></hr>\n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n\n## ðŸ“š  <b> Practice 1. </b> \n\nIn programs, <code>if</code> statements are useful for catching errors due to user input. Define two new variables based on user input: the first prompting for a temperature value and the second prompting for the units as \"F\" or \"C\". Using the equation below, write an <code>if</code> statement that converts the temperature input to Â°C if it was given in Â°F or to Â°F if given in Â°C. Recall that all variables assigned based on user input are strings. Be sure to comment your code.\n\nFormula for conversion between Â°F and Â°C:\n$$ T_{^{\\circ} C} = (T_{^{\\circ} F} - 32) \\times 5/9 $$\n\n</div>\n\n\n## ðŸ“š  <b> Practice 2. </b> \nUsing nested <code>if</code> statements and your code from Practice question #1, convert the user input temperature to the opposite units (Â°F to Â°C or vice versa), print a statement to the user that reports the temperature in the converted units and indicates whether or not the temperature below freezing. \n\nYour print statement should look something like, \n\n<code>The temperature is __Â°C/F. It is (not) below freezing.</code>\n\n\n## ðŸ“š  <b> Practice 3. </b> \n\n1. Create a list of the six organic elements sorted in alphabetical order and then print each element in the list.\n\n2. Given your sorted <code>org_elements</code> list and the corresponding list of atomic masses given in the cell below, use <code>enumerate()</code> in a <code>for</code> loop to print a formatted statement that expresses the atomic mass of of each element. \n\nYour formatted print statement should include the name of the element, the atomic mass rounded to 2 decimal places, and units.\n\nAnother solution using `zip()` is given in the cell below.\n\n## ðŸ“š  <b> Practice 4. </b> \nThe cell below contains monthly global land-ocean surface temperature in Â°F for each month during the years 2015-2022. \n\nUsing  <code>enumerate()</code>, <code>zip()</code>, a nested <code>for</code> loop, or some combination of the three:\n\n<ol class=\"alpha\">\n<li> Calculate the monthly global land-ocean surface temperature anomalies (deviation from the mean) in Â°C for 2015-2018. The mean global land-ocean surface temperature calculated over the 20th century was 15.6Â°C.</li>\n<li> Create a new list with the mean monthly global surface temperature anomalies in Â°C for 2015-2023 (i.e. calculate the mean temperature anomaly for each month and put these values in a list). Use the command <code>np.mean()</code> to calculate mean values. </li> \n<li> Print each monthly mean value with the name of the month and units. </li>\n</ol>\n</div>\n\n<hr style=\"border-top: 1px solid gray; margin-top: 24px; margin-bottom: 1px\"></hr>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","html-math-method":"katex","toc":true,"css":["styles/activities.css"],"include-before-body":["../../header.html"],"output-file":"practice_2-1_control_flow_statements_key.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.361","toc-location":"left","title":"Exercise 2-1: Control Flow Statements"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}